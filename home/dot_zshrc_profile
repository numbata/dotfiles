# Environment Variables
export PATH="~/bin:$PATH"
export GOPATH="$HOME/.go"
export SSH_ENV="$HOME/.ssh/environment"
export EDITOR=vim
export VISUAL=vim
export GPG_TTY=$(tty)

autoload -Uz add-zsh-hook vcs_info

# History Settings
HISTSIZE=5000
SAVEHIST=5000
HISTFILE=~/.zsh_history
setopt hist_ignore_dups  # Avoid duplicates in history
setopt share_history     # Share history between Zsh sessions

# Source Additional Configurations
[ -f ~/.aliases ] && source ~/.aliases
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# Enable Useful zsh Options
setopt CORRECT

PROMPT="%F{green}%~ %F{red}%f$ "

# Set prompt substitution so we can use the vcs_info_message variable
setopt prompt_subst

# Run the `vcs_info` hook to grab git info before displaying the prompt
add-zsh-hook precmd vcs_info

# Style the vcs_info message
zstyle ':vcs_info:*' enable git
zstyle ':vcs_info:git*' formats '%b%u%c'
# Format when the repo is in an action (merge, rebase, etc)
zstyle ':vcs_info:git*' actionformats '%F{14}⏱ %*%f'
zstyle ':vcs_info:git*' unstagedstr '*'
zstyle ':vcs_info:git*' stagedstr '+'
# This enables %u and %c (unstaged/staged changes) to work,
# but can be slow on large repos
zstyle ':vcs_info:*:*' check-for-changes true

# Set the right prompt to the vcs_info message
RPROMPT='${vcs_info_msg_0_:+"%F{green}⎇ $vcs_info_msg_0_%f"}'

# SSH Agent Setup
function start_agent {
    echo "Initialising new SSH agent..."
    /usr/bin/ssh-agent | sed 's/^echo/#echo/' > "${SSH_ENV}"
    echo succeeded
    chmod 600 "${SSH_ENV}"
    . "${SSH_ENV}" > /dev/null
    /usr/bin/ssh-add;
}

if [ -f "${SSH_ENV}" ]; then
    . "${SSH_ENV}" > /dev/null
    ps -ef | grep ${SSH_AGENT_PID} | grep ssh-agent$ > /dev/null || {
        start_agent;
    }
else
    start_agent;
fi

